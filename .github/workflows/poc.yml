name: POCc
on: push
jobs:
  prepare: 
    runs-on: ubuntu-latest
    steps:
      - run: echo prepare

  build:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - run: |
          echo build
          sleep 20
          exit 2

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: echo deploy

  retry:
    runs-on: ubuntu-latest
    needs: [prepare, build, deploy]
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Failure annotation contains string
        env:
          TARGET: Process completed with exit code 2
          GH_TOKEN: ${{ github.token }}
        run: |
          set +e # prevent exit on error
          JOB_IDS=$(gh run view ${{ github.run_id }} --json jobs --jq '.jobs[].databaseId')
          RESULT=false
          for ID in $JOB_IDS
          do
            echo "::group::JOB: ${ID}"
            ANNOTATIONS=$(gh api repos/{owner}/{repo}/check-runs/${ID}/annotations)
            jq . <<< $ANNOTATIONS
            FAIL_MESSAGES=$(jq ".[] | select( .annotation_level | contains(\"failure\") ) | .message" <<< $ANNOTATIONS)
            grep -q "${{ env.TARGET }}" <<< "$FAIL_MESSAGES" && RESULT=true
            echo "" # empty line
            echo "::endgroup::"
          done

          if [[ "$RESULT" == "true" ]]
          then
            echo Job Failed because '"'${{ env.TARGET }}'"'
            gh run rerun ${{ github.run_id }} --failed
          else
            echo Not Found!
          fi
  
